{"version":3,"mappings":"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","names":["SvgCheck","props","React","classes","result","item","className","isActive","lazyIcons","lazy","__vitePreload","Check","isValidUrl","source","absoluteUrl","UrlSvgLoader","url","svgContent","setSvgContent","useState","loading","setLoading","error","setError","useEffect","response","content","e","processedContent","jsx","Icon","Source","size","stroke","viewBox","defaultProps","isLikelyUrl","Suspense","LazyIcon","isRejectedUrl","Checkbox","name","value","disabled","label","description","checked","isChecked","setIsChecked","ref","useRef","handleCheckboxChange","_a","handleOnKeyDown","jsxs","EmailConsentUiComponent","EmailConsentContainer","enable_sms_consent","enable_email_consent","sms_consent_label","email_consent_label","sms_consent_name","email_consent_name","sms_disclosure","KlaviyoApiCreateUpdate","checkoutData","addressData","emailConsent","emailListCode","smsConsent","smsListCode","meshApiPoint","checkIfEmailExists","checkIfEmailExist","profile","profileId","data","restructureCustomerObject","newProfile","createProfile","subscribeData","subscribe","subscribeProfile","convertPhoneFormat","phone","consentIdentifier","code","create","subscriptions","relationships","addressDataAttributes","_b","_c"],"ignoreList":[0,1,2,3],"sources":["../../node_modules/@adobe-commerce/elsie/src/icons/Check.svg","../../node_modules/@adobe-commerce/elsie/src/lib/classes.ts","../../node_modules/@adobe-commerce/elsie/src/components/Icon/Icon.tsx","../../node_modules/@adobe-commerce/elsie/src/components/Checkbox/Checkbox.tsx","/@raldea/email-consent/src/components/EmailConsentUiComponent/EmailConsentUiComponent.tsx","/@raldea/email-consent/src/containers/EmailConsentContainer/EmailConsentContainer.tsx"],"sourcesContent":["import * as React from \"react\";\nconst SvgCheck = (props) => /* @__PURE__ */ React.createElement(\"svg\", { id: \"Icon_Check_Base\", \"data-name\": \"Icon \\\\u2013 Check \\\\u2013 Base\", xmlns: \"http://www.w3.org/2000/svg\", width: 24, height: 24, viewBox: \"0 0 24 24\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { id: \"Large\" }, /* @__PURE__ */ React.createElement(\"rect\", { id: \"Placement_area\", \"data-name\": \"Placement area\", width: 24, height: 24, fill: \"#fff\", opacity: 0 }), /* @__PURE__ */ React.createElement(\"g\", { id: \"Check_icon\", \"data-name\": \"Check icon\", transform: \"translate(303.874 1434.583)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", id: \"Path_884137\", \"data-name\": \"Path 884137\", d: \"M148,494.611l4.248,4.244,8.538-8.522\", transform: \"translate(-446.265 -1917.177)\", fill: \"none\", stroke: \"currentColor\" }))));\nexport default SvgCheck;\n","/********************************************************************\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this \n * file in accordance with the terms of the Adobe license agreement \n * accompanying it. \n *******************************************************************/\n\n// @ts-ignore\nimport { JSXInternal } from 'preact/src/jsx';\n\ntype ClassName = string | JSXInternal.SignalLike<string | undefined>;\n\nexport const classes = (\n  classes: Array<ClassName | [ClassName, boolean] | undefined>\n) => {\n  const result = classes.reduce((result, item) => {\n    if (!item) return result;\n\n    if (typeof item === 'string') result += ` ${item}`;\n\n    if (Array.isArray(item)) {\n      const [className, isActive] = item;\n      if (className && isActive) {\n        result += ` ${className}`;\n      }\n    }\n\n    return result;\n  }, '') as string;\n\n  return result.trim();\n};\n","/********************************************************************\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this\n * file in accordance with the terms of the Adobe license agreement\n * accompanying it.\n *******************************************************************/\n\nimport { FunctionComponent } from 'preact';\nimport { classes } from '@adobe-commerce/elsie/lib/classes';\nimport { lazy, Suspense, SVGProps } from 'preact/compat';\nimport { useState, useEffect } from 'preact/hooks';\n\nimport '@adobe-commerce/elsie/components/Icon/Icon.css';\n\nexport type IconType = keyof typeof import('@adobe-commerce/elsie/icons');\n\nconst lazyIcons = {\n  Add: lazy(() => import('@adobe-commerce/elsie/icons/Add.svg')),\n  Bulk: lazy(() => import('@adobe-commerce/elsie/icons/Bulk.svg')),\n  Burger: lazy(() => import('@adobe-commerce/elsie/icons/Burger.svg')),\n  Cart: lazy(() => import('@adobe-commerce/elsie/icons/Cart.svg')),\n  Check: lazy(() => import('@adobe-commerce/elsie/icons/Check.svg')),\n  ChevronDown: lazy(() => import('@adobe-commerce/elsie/icons/ChevronDown.svg')),\n  ChevronUp: lazy(() => import('@adobe-commerce/elsie/icons/ChevronUp.svg')),\n  ChevronRight: lazy(() => import('@adobe-commerce/elsie/icons/ChevronRight.svg')),\n  Close: lazy(() => import('@adobe-commerce/elsie/icons/Close.svg')),\n  Heart: lazy(() => import('@adobe-commerce/elsie/icons/Heart.svg')),\n  Minus: lazy(() => import('@adobe-commerce/elsie/icons/Minus.svg')),\n  Placeholder: lazy(() => import('@adobe-commerce/elsie/icons/Placeholder.svg')),\n  PlaceholderFilled: lazy(\n    () => import('@adobe-commerce/elsie/icons/PlaceholderFilled.svg')\n  ),\n  Search: lazy(() => import('@adobe-commerce/elsie/icons/Search.svg')),\n  SearchFilled: lazy(() => import('@adobe-commerce/elsie/icons/SearchFilled.svg')),\n  Sort: lazy(() => import('@adobe-commerce/elsie/icons/Sort.svg')),\n  Star: lazy(() => import('@adobe-commerce/elsie/icons/Star.svg')),\n  View: lazy(() => import('@adobe-commerce/elsie/icons/View.svg')),\n  User: lazy(() => import('@adobe-commerce/elsie/icons/User.svg')),\n  Warning: lazy(() => import('@adobe-commerce/elsie/icons/Warning.svg')),\n  Locker: lazy(() => import('@adobe-commerce/elsie/icons/Locker.svg')),\n  Wallet: lazy(() => import('@adobe-commerce/elsie/icons/Wallet.svg')),\n  Card: lazy(() => import('@adobe-commerce/elsie/icons/Card.svg')),\n  Order: lazy(() => import('@adobe-commerce/elsie/icons/Order.svg')),\n  Delivery: lazy(() => import('@adobe-commerce/elsie/icons/Delivery.svg')),\n  OrderError: lazy(() => import('@adobe-commerce/elsie/icons/OrderError.svg')),\n  OrderSuccess: lazy(() => import('@adobe-commerce/elsie/icons/OrderSuccess.svg')),\n  PaymentError: lazy(() => import('@adobe-commerce/elsie/icons/PaymentError.svg')),\n  CheckWithCircle: lazy(() => import('@adobe-commerce/elsie/icons/CheckWithCircle.svg')),\n  WarningWithCircle: lazy(\n    () => import('@adobe-commerce/elsie/icons/WarningWithCircle.svg')\n  ),\n  WarningFilled: lazy(() => import('@adobe-commerce/elsie/icons/WarningFilled.svg')),\n  InfoFilled: lazy(() => import('@adobe-commerce/elsie/icons/InfoFilled.svg')),\n  HeartFilled: lazy(() => import('@adobe-commerce/elsie/icons/HeartFilled.svg')),\n  Trash: lazy(() => import('@adobe-commerce/elsie/icons/Trash.svg')),\n  Eye: lazy(() => import('@adobe-commerce/elsie/icons/Eye.svg')),\n  EyeClose: lazy(() => import('@adobe-commerce/elsie/icons/EyeClose.svg')),\n  Date: lazy(() => import('@adobe-commerce/elsie/icons/Date.svg')),\n  AddressBook: lazy(() => import('@adobe-commerce/elsie/icons/AddressBook.svg')),\n  EmptyBox: lazy(() => import('@adobe-commerce/elsie/icons/EmptyBox.svg')),\n  Coupon: lazy(() => import('@adobe-commerce/elsie/icons/Coupon.svg')),\n  Gift: lazy(() => import('@adobe-commerce/elsie/icons/Gift.svg')),\n  GiftCard: lazy(() => import('@adobe-commerce/elsie/icons/GiftCard.svg')),\n  Edit: lazy(() => import('@adobe-commerce/elsie/icons/Edit.svg')),\n};\n\nexport interface IconProps extends Omit<SVGProps<SVGSVGElement>, 'size'> {\n  source?:\n  | FunctionComponent<SVGProps<SVGSVGElement> & { title?: string }>\n  | IconType\n  | string;\n  size?: '12' | '16' | '24' | '32' | '64' | '80';\n  stroke?: '1' | '2' | '3' | '4';\n  className?: string;\n  title?: string;\n}\n\nexport type IconNode = FunctionComponent<\n  SVGProps<SVGSVGElement> & { title?: string }\n>;\n\nfunction isValidUrl(source: string): boolean { // check for URL from same domain\n  try {\n    if (source.startsWith('//')) {\n      const absoluteUrl = `${window.location.protocol}${source}`;\n      const url = new URL(absoluteUrl);\n      if (url.hostname !== window.location.hostname) {\n        console.error(\n          `[Icon] External URL rejected for security: ${source} - Only same-domain URLs are allowed`\n        );\n        return false;\n      }\n      return true;\n    }\n    const url = new URL(source);\n    \n    if (url.hostname !== window.location.hostname) {\n      console.error(`[Icon] External URL rejected for security: ${source} - Only same-domain URLs are allowed`);\n      return false;\n    }\n    \n    return true;\n  } catch {\n    console.error(`[Icon] Invalid URL format: ${source}`);\n    return false;\n  }\n}\n\nfunction UrlSvgLoader({\n  url,\n  ...props\n}: SVGProps<SVGSVGElement> & { url: string }) {\n  const [svgContent, setSvgContent] = useState<string>('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          console.error(`[Icon] Failed to fetch SVG: ${response.status} ${response.statusText}`);\n          throw error;\n        }\n        return response.text();\n      })\n      .then(content => {\n        // Check if content is valid SVG\n        try {\n          const parser = new DOMParser();\n          const doc = parser.parseFromString(content, \"image/svg+xml\");\n          const svg = doc.querySelector('svg');\n          if (!svg) {\n            throw new Error(\"No <svg> element found\");\n          }\n          // Success!\n        } catch(e: unknown) {\n          if (e instanceof Error ) {\n            console.error(`[Icon] Invalid SVG content from ${url}: ${e.message}`);\n          } else {\n            console.error(`[Icon] Invalid SVG content from ${url}: ${String(e)}`);\n          }\n          setError(true);\n          setLoading(false);\n        }\n        \n\n        // Process SVG content to ensure proper sizing and accessibility\n        let processedContent = content;\n\n        if (props.width) {\n          processedContent = processedContent.replace(\n            /<svg([^>]*)\\s+width\\s*=\\s*[\"'][^\"']*[\"']/gi,\n            '<svg$1'\n          );\n          processedContent = processedContent.replace(\n            /<svg/i,\n            `<svg width=\"${props.width}\"`\n          );\n        }\n\n        if (props.height) {\n          processedContent = processedContent.replace(\n            /<svg([^>]*)\\s+height\\s*=\\s*[\"'][^\"']*[\"']/gi,\n            '<svg$1'\n          );\n          processedContent = processedContent.replace(\n            /<svg/i,\n            `<svg height=\"${props.height}\"`\n          );\n        }\n        \n        if (props.title) {\n          processedContent = processedContent.replace(/<title[^>]*>.*?<\\/title>/gi, '');\n          processedContent = processedContent.replace(\n            /<svg([^>]*)>/i,\n            `<svg$1><title>${props.title}</title>`\n          );\n        }\n        \n        setSvgContent(processedContent);\n        setLoading(false);\n      })\n      .catch((error) => {\n        if (error instanceof Error) {\n          console.error(`[Icon] ${error.message}`);\n        } else {\n          console.error(`[Icon] ${String(error)}`);\n        }\n        setError(true);\n        setLoading(false);\n      });\n  }, [url, props.width, props.height, props.title]);\n\n  if (loading || error) {\n    return <svg {...props} />;\n  }\n\n  return (\n    <span\n      className={props.className}\n      style={{\n        width: String(props.width),\n        height: String(props.height),\n        display: 'inline-flex',\n        lineHeight: 0,\n      }}\n      dangerouslySetInnerHTML={{ __html: svgContent }}\n    />\n  );\n}\n\nexport function Icon({\n  source: Source,\n  size = '24',\n  stroke = '2',\n  viewBox = '0 0 24 24',\n  className,\n  ...props\n}: IconProps) {\n\n  const defaultProps = {\n    className: classes([\n      'dropin-icon',\n      `dropin-icon--shape-stroke-${stroke}`,\n      className,\n    ]),\n    width: size,\n    height: size,\n    viewBox,\n  };\n\n  // Only validate strings that look like URLs (start with http, //, or /)\n  const isLikelyUrl =\n    typeof Source === 'string' &&\n    (Source.startsWith('http') ||\n      Source.startsWith('//') ||\n      Source.startsWith('/'));\n\n  if (isLikelyUrl && isValidUrl(Source)) {\n    return (\n      <Suspense fallback={<svg {...props} {...defaultProps} />}>\n        <UrlSvgLoader url={Source} {...props} {...defaultProps}/>\n      </Suspense>\n    );\n  }\n\n  const LazyIcon = typeof Source === 'string' && Source in lazyIcons\n    ? lazyIcons[Source as IconType]\n    : null;\n\n  const isRejectedUrl = isLikelyUrl && !isValidUrl(Source);\n\n  return (\n    <Suspense fallback={<svg {...props} {...defaultProps} />}>\n      {LazyIcon ? (\n        <LazyIcon {...props} {...defaultProps} />\n      ) : isRejectedUrl ? (\n        <svg {...props} {...defaultProps} />\n      ) : (\n        // @ts-ignore\n        <Source {...props} {...defaultProps} />\n      )}\n    </Suspense>\n  );\n}\n","/********************************************************************\n *  Copyright 2024 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this \n * file in accordance with the terms of the Adobe license agreement \n * accompanying it. \n *******************************************************************/\n\nimport { FunctionComponent, VNode } from 'preact';\nimport { ChangeEvent, HTMLAttributes, useRef, useState } from 'preact/compat';\nimport { classes } from '@adobe-commerce/elsie/lib';\nimport { Check } from '@adobe-commerce/elsie/icons';\nimport { Icon } from '@adobe-commerce/elsie/components/Icon';\nimport '@adobe-commerce/elsie/components/Checkbox/Checkbox.css';\nimport { useEffect } from 'preact/hooks';\n\nexport interface CheckboxProps\n  extends Omit<HTMLAttributes<HTMLInputElement>, 'size' | 'label'> {\n  name: string;\n  size?: 'medium' | 'large';\n  disabled?: boolean;\n  error?: boolean;\n  label?: string | VNode | VNode[];\n  description?: string | VNode | VNode[];\n}\n\nexport const Checkbox: FunctionComponent<CheckboxProps> = ({\n  name,\n  value,\n  size = 'medium',\n  disabled = false,\n  error = false,\n  label = '',\n  description = '',\n  className,\n  checked,\n  ...props\n}) => {\n  const [isChecked, setIsChecked] = useState(\n    checked === undefined ? false : checked\n  );\n  const ref = useRef<HTMLInputElement>(null);\n\n  const handleCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange?.(e);\n    setIsChecked(e.currentTarget.checked);\n  };\n\n  const handleOnKeyDown = (e: KeyboardEvent) => {\n    if (e.key === ' ') {\n      e.preventDefault();\n      ref?.current?.click();\n    }\n  };\n\n  useEffect(() => {\n    if (typeof checked === 'boolean') {\n      setIsChecked(checked);\n    }\n  }, [checked]);\n\n  return (\n    <label\n      className={classes([\n        'dropin-checkbox',\n        ['dropin-checkbox--disabled', disabled],\n      ])}\n    >\n      <input\n        ref={ref}\n        name={name}\n        value={value}\n        type=\"checkbox\"\n        disabled={disabled}\n        className={classes([\n          'dropin-checkbox__checkbox',\n          ['dropin-checkbox__checkbox--error', error],\n          className,\n        ])}\n        {...props}\n        onChange={handleCheckboxChange}\n        checked={isChecked}\n      />\n\n      <div className=\"dropin-checkbox__checkbox-icon\">\n        {/*Zero-width space character, used to align checkbox properly*/}\n        {'\\u200B'}\n        <span\n          aria-checked={isChecked ? 'true' : 'false'}\n          aria-labelledby={`${name}-label`}\n          aria-describedby={description ? `${name}-description` : undefined}\n          className={classes([\n            'dropin-checkbox__box',\n            ['dropin-checkbox__box--error', error],\n            ['dropin-checkbox__box--disabled', disabled],\n          ])}\n          role=\"checkbox\"\n          tabIndex={disabled ? -1 : 0}\n          onKeyDown={handleOnKeyDown}\n        >\n          <Icon\n            className={classes(['dropin-checkbox__checkmark'])}\n            source={Check}\n            size=\"16\"\n            stroke=\"3\"\n          />\n        </span>\n      </div>\n\n      <div\n        id={`${name}-label`}\n        className={classes([\n          'dropin-checkbox__label',\n          `dropin-checkbox__label--${size}`,\n          ['dropin-checkbox__label--disabled', disabled],\n        ])}\n      >\n        {label}\n      </div>\n\n      <div />\n      {description && (\n        <div\n          id={`${name}-description`}\n          role={'note'}\n          className={classes([\n            'dropin-checkbox__description',\n            `dropin-checkbox__description--${size}`,\n            ['dropin-checkbox__description--disabled', disabled],\n          ])}\n        >\n          {description}\n        </div>\n      )}\n    </label>\n  );\n};\n","/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this \n * file in accordance with the terms of the Adobe license agreement \n * accompanying it. \n *******************************************************************/\n  \nimport {FunctionComponent} from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe-commerce/elsie/lib';\nimport { Checkbox } from '@adobe-commerce/elsie/components/Checkbox';\nimport '@/emailconsent/components/EmailConsentUiComponent/EmailConsentUiComponent.css';\n\nexport interface EmailConsentUiComponentProps extends HTMLAttributes<HTMLDivElement> {\n  name: string;\n  label: string;\n}\n\nexport const EmailConsentUiComponent: FunctionComponent<EmailConsentUiComponentProps> = ({\n  className,\n  checked,\n  name,\n  label,\n  ...props\n}) => {\n  return (\n    <div {...props} className={classes(['emailconsent-email-consent-ui-component', className])}>\n      <Checkbox name={name} label={label} checked={checked} />\n    </div>\n  );\n};\n","/********************************************************************\n *  Copyright 2025 Adobe\n *  All Rights Reserved.\n *\n * NOTICE:  Adobe permits you to use, modify, and distribute this \n * file in accordance with the terms of the Adobe license agreement \n * accompanying it. \n *******************************************************************/\n  \nimport { HTMLAttributes } from 'preact/compat';\nimport { Container } from '@adobe-commerce/elsie/lib';\nimport { checkIfEmailExist, subscribeProfile, createProfile } from '../../api/emailConsent';\nimport { EmailConsentUiComponent } from '@/emailconsent/components';\n\nexport interface EmailConsentContainerProps extends HTMLAttributes<HTMLDivElement> {\n    checked: boolean;\n    enable_sms_consent: boolean;\n    enable_email_consent: boolean;\n    sms_consent_label: string;\n    email_consent_label: string;\n    sms_consent_name: string;\n    email_consent_name: string;\n    sms_disclosure: string;\n}\n    \nexport const EmailConsentContainer: Container<EmailConsentContainerProps> = ({\n    enable_sms_consent,\n    enable_email_consent,\n    sms_consent_label,\n    email_consent_label,\n    sms_consent_name,\n    email_consent_name,\n    checked,\n    sms_disclosure,\n    ...props\n}) => {\n  return (\n    <div {...props}>\n        {enable_email_consent && (\n            <EmailConsentUiComponent label={email_consent_label} name={email_consent_name} checked={checked} />\n        )}\n        {enable_sms_consent && (\n            <div class=\"sms-consent\">\n                <EmailConsentUiComponent label={sms_consent_label} name={sms_consent_name} checked={checked} />\n\n                <div class=\"sms-disclosure\">\n                    {sms_disclosure}\n                </div>\n            </div>\n        )}\n    </div>\n  );\n};\n\nexport const KlaviyoApiCreateUpdate = async (\n    checkoutData: object,\n    addressData: object,\n    emailConsent: boolean,\n    emailListCode: string,\n    smsConsent: boolean,\n    smsListCode: string,\n    meshApiPoint: string\n): Promise<object|null> => {\n    let checkIfEmailExists = await checkIfEmailExist(checkoutData.email, meshApiPoint);\n    let profile = null;\n    let profileId = null;\n\n    if (checkIfEmailExists.GetProfileByEmail.data.length <= 0) {\n        let data = restructureCustomerObject(checkoutData, addressData, null, null, null, true);\n        let newProfile = await createProfile(data, meshApiPoint);\n\n        if (Object.keys(newProfile.createProfile).length > 0) {\n            profile = newProfile.createProfile.data;\n        }\n    } else {\n        profile = checkIfEmailExists.GetProfileByEmail.data[0];\n    }\n\n    let subscribeData = [];\n    if (profile && Object.keys(profile.id).length > 0) {\n        profileId = profile.id;\n    }\n\n    if (profileId) {\n        if (emailConsent) {\n            let data = restructureCustomerObject(checkoutData, addressData, 'email', profileId, emailListCode);\n\n            if (Object.keys(data).length > 0) {\n                subscribeData.push(data);\n            }\n        }\n\n        if (smsConsent) {\n            let data = restructureCustomerObject(checkoutData, addressData, 'sms', profileId, smsListCode);\n\n            if (Object.keys(data).length > 0) {\n                subscribeData.push(data);\n            }\n        }\n\n        if (subscribeData.length) {\n            for (const subscribe of subscribeData) {\n                subscribeProfile(subscribe, meshApiPoint);\n            }\n        }\n    }\n\n    return profile;\n};\n\nconst convertPhoneFormat = (\n    phone: string|null\n): string|null => {\n    let result = null;\n\n    if (phone) {\n        const string = String(phone);\n        return string.replace(/^(\\d)/, '+$1').replace(/^\\((?!\\+)/, '(+');\n    }\n\n    return result;\n}\n\nconst restructureCustomerObject = (\n    checkoutData: object,\n    addressData: object,\n    consentIdentifier: null|string,\n    profileId: null|string,\n    code: null|string,\n    create: boolean = false\n): object => {\n    let subscriptions = {};\n    let relationships = {};\n    let addressDataAttributes = addressData.data;\n    let data = {};\n    let phone = convertPhoneFormat(addressDataAttributes.telephone);\n\n    if (create) {\n        data = {\n            data: {\n                type: \"profile\",\n                attributes: {\n                    email: checkoutData.email || null,\n                    first_name: addressDataAttributes.firstName || null,\n                    last_name: addressDataAttributes.lastName || null,\n                    organization: addressDataAttributes.company || null,\n                    location: {\n                        address1: addressDataAttributes.street?.[0] || null,\n                        address2: addressDataAttributes.street?.[1] || null,\n                        city: addressDataAttributes.city || null,\n                        country: addressDataAttributes.countryCode || null,\n                        region: addressDataAttributes.region?.regionCode || null,\n                        zip: addressDataAttributes.postcode || null\n                    }\n                }\n            }\n        };\n    }\n\n    if (!create) {\n        if (consentIdentifier === \"email\" && profileId) {\n            data = {\n                data: {\n                    type: \"profile-subscription-bulk-create-job\",\n                    attributes: {\n                        profiles: {\n                            data: [\n                                {\n                                    type: \"profile\",\n                                    id: profileId,\n                                    attributes: {\n                                        email: checkoutData.email || null\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            };\n\n            subscriptions.email = {\n                marketing: {\n                    consent: \"SUBSCRIBED\"\n                }\n            };\n        }\n\n        if (consentIdentifier === \"sms\" && profileId) {\n            data = {\n                data: {\n                    type: \"profile-subscription-bulk-create-job\",\n                    attributes: {\n                        profiles: {\n                            data: [\n                                {\n                                    type: \"profile\",\n                                    id: profileId,\n                                    attributes: {\n                                        phone_number: phone || null\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            };\n\n            subscriptions.sms = {\n                marketing: {\n                    consent: \"SUBSCRIBED\"\n                },\n                transactional: {\n                    consent: \"SUBSCRIBED\"\n                }\n            };\n        }\n\n        if (profileId && Object.keys(subscriptions).length > 0) {\n            data.data.attributes.profiles.data[0].attributes.subscriptions = subscriptions;\n        }\n\n        if (code) {\n            relationships.list = {\n                data: {\n                    type: 'list',\n                    id: code\n                }\n            };\n        }\n\n        if (profileId && code && Object.keys(relationships.list.data).length > 0) {\n            data.data.relationships = relationships;\n        }\n    }\n\n    return data;\n};\n"],"file":"containers/EmailConsentContainer.js"}